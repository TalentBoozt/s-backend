info.app.name=Talentboozt Server
info.app.version=1.0.0
info.app.description=The Main Talentboozt Server for all common SAaS products that includes: Job Portal, Resume Builder, Training Platforms, APIs and more.
info.app.environment=dev
info.app.deployed=AWS
info.app.developers=Kavindu Kokila

spring.application.name=s-backend?replicaSet=rs0
#spring.data.mongodb.host=localhost
spring.data.mongodb.uri=${DATABASE_URI:World}
spring.data.mongodb.port=${DATABASE_PORT:World}

spring.data.mongodb.database=${DATABASE:World}

server.port=${SERVER_PORT:World}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

spring.mail.host=smtp.zoho.eu
spring.mail.port=${EMAIL_PORT:World}
spring.mail.username=${EMAIL_USERNAME:World}
spring.mail.password=${EMAIL_PASSWORD:World}
spring.mail.properties.mail.smtp.from=${EMAIL_USERNAME:World}
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
#spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.ssl.enable=false
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

env.connection=${ENV_CONNECTION:World}
#logging.level.org.springframework=DEBUG

spring.security.filter.dispatcher-types=REQUEST,ERROR
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.endpoint.info.cache.time-to-live=10s
management.endpoint.info.access=unrestricted
management.endpoint.metrics.enabled=true
management.graphite.metrics.export.enabled=true
management.endpoint.loggers.access=read-only
management.endpoint.beans.access=read_only
management.info.env.enabled=true

spring.security.user.name=${USER1_USERNAME:World}
spring.security.user.password=${USER1_PASSWORD:World}
recaptcha.secret=${RECAPTCHA_SECRET:World}
openai.api.key=${OPENAI_API_KEY:World}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:World}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:World}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/google

# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:World}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:World}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/github

# GitHub OAuth2 Provider
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user

# Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/oauth2/callback/facebook

# Facebook OAuth2 Provider (v2.12)
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v19.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v19.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v19.0/me

# LinkedIn OAuth2 Configuration
spring.security.oauth2.client.registration.linkedin.client-id=${LINKEDIN_CLIENT_ID:World}
spring.security.oauth2.client.registration.linkedin.client-secret=${LINKEDIN_CLIENT_SECRET:World}
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile,r_emailaddress
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/oauth2/callback/linkedin

# LinkedIn OAuth2 Provider
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
linkedin.client-id=${LINKEDIN_CLIENT_ID:World}
linkedin.client-secret=${LINKEDIN_CLIENT_SECRET:World}
linkedin.redirect-uri=https://login.talentboozt.com/oauth-callback/linkedin
linkedin.token-url=https://www.linkedin.com/oauth/v2/accessToken
linkedin.profile-url=https://api.linkedin.com/v2/userinfo
linkedin.email-url=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

# RabbitMQ Configuration (uncomment to enable microservice)
#spring.rabbitmq.host=${RABBITMQ_HOST:World}
#spring.rabbitmq.port=${RABBITMQ_PORT:World}
#spring.rabbitmq.username=${RABBITMQ_USERNAME:World}
#spring.rabbitmq.password=${RABBITMQ_PASSWORD:World}

stripe.api.secret-key=${STRIPE_SECRET:World}
stripe.api.test-key=${STRIPE_TEST_SECRET:World}
jwt-token.secret=${JWT_SECRET:World}

# Enable compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
spring.web.resources.static-locations=classpath:/static/,classpath:/public/,classpath:/resources/,classpath:/META-INF/resources/

spring.mvc.async.request-timeout=-1

spring.web.resources.add-mappings=true
server.servlet.context-path=/

audit.batch-size=100
audit.flush-interval-s= 5
audit.expire-after-days=30
